<?xml version="1.0" encoding="UTF-8"?>
<project xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd"
   xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance">
   <modelVersion>4.0.0</modelVersion>
   <groupId>org.ocpsoft.redoculous</groupId>
   <artifactId>redoculous-io</artifactId>
   <version>1.0.0-SNAPSHOT</version>
   <packaging>war</packaging>

   <properties>
      <version.jboss.bom.eap>6.2.0-redhat-1</version.jboss.bom.eap>
      <version.deltaspike>0.5</version.deltaspike>
      <version.rewrite>2.0.8.Final</version.rewrite>
   </properties>

   <dependencyManagement>
      <dependencies>
         <dependency>
            <groupId>org.jboss.bom.eap</groupId>
            <artifactId>jboss-javaee-6.0-with-security</artifactId>
            <version>${version.jboss.bom.eap}</version>
            <type>pom</type>
            <scope>import</scope>
         </dependency>
         <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-servlet</artifactId>
            <version>${version.rewrite}</version>
         </dependency>
         <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-integration-cdi</artifactId>
            <version>${version.rewrite}</version>
         </dependency>
         <dependency>
            <groupId>org.ocpsoft.rewrite</groupId>
            <artifactId>rewrite-integration-faces</artifactId>
            <version>${version.rewrite}</version>
         </dependency>
      </dependencies>
   </dependencyManagement>
   <dependencies>
      <dependency>
         <groupId>org.ocpsoft.rewrite</groupId>
         <artifactId>rewrite-servlet</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ocpsoft.rewrite</groupId>
         <artifactId>rewrite-integration-cdi</artifactId>
      </dependency>
      <dependency>
         <groupId>org.ocpsoft.rewrite</groupId>
         <artifactId>rewrite-integration-faces</artifactId>
      </dependency>

      <!-- Import the PicketLink API, we deploy this as library with the application, and can compile against it -->
      <dependency>
         <groupId>org.picketlink</groupId>
         <artifactId>picketlink-api</artifactId>
      </dependency>

      <!-- Import the PicketLink implementation, we deploy this as library with the application, but can't compile against 
         it -->
      <dependency>
         <groupId>org.picketlink</groupId>
         <artifactId>picketlink-impl</artifactId>
      </dependency>

      <!-- Import the PicketLink IDM API, we deploy this as library with the application, and can compile against it -->
      <dependency>
         <groupId>org.picketlink</groupId>
         <artifactId>picketlink-idm-api</artifactId>
      </dependency>

      <!-- Import the PicketLink IDM API, we deploy this as library with the application, and can compile against it -->
      <dependency>
         <groupId>org.picketlink</groupId>
         <artifactId>picketlink-idm-impl</artifactId>
      </dependency>

      <!-- Import the PicketLink IDM Simple Schema, which provides some built-in JPA entities for the sample model -->
      <dependency>
         <groupId>org.picketlink</groupId>
         <artifactId>picketlink-idm-simple-schema</artifactId>
      </dependency>

      <!-- Import the EJB API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.ejb</groupId>
         <artifactId>jboss-ejb-api_3.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the CDI API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>javax.enterprise</groupId>
         <artifactId>cdi-api</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the Common Annotations API (JSR-250), we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.annotation</groupId>
         <artifactId>jboss-annotations-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the Servlet API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.servlet</groupId>
         <artifactId>jboss-servlet-api_3.0_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the JAX-RS API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.ws.rs</groupId>
         <artifactId>jboss-jaxrs-api_1.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the JSF API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.jboss.spec.javax.faces</groupId>
         <artifactId>jboss-jsf-api_2.1_spec</artifactId>
         <scope>provided</scope>
      </dependency>

      <!-- Import the JPA API, we use provided scope as the API is included in JBoss AS 7 -->
      <dependency>
         <groupId>org.hibernate.javax.persistence</groupId>
         <artifactId>hibernate-jpa-2.0-api</artifactId>
         <scope>provided</scope>
      </dependency>
   </dependencies>

   <repositories>
      <repository>
         <id>JBOSS_NEXUS</id>
         <url>http://repository.jboss.org/nexus/content/groups/public</url>
      </repository>
   </repositories>

   <build>
      <finalName>redoculous-io</finalName>
      <plugins>
         <plugin>
            <artifactId>maven-compiler-plugin</artifactId>
            <version>2.3.2</version>
            <configuration>
               <source>1.6</source>
               <target>1.6</target>
               <encoding>UTF-8</encoding>
            </configuration>
         </plugin>
         <plugin>
            <artifactId>maven-war-plugin</artifactId>
            <version>2.1.1</version>
            <configuration>
               <failOnMissingWebXml>false</failOnMissingWebXml>
            </configuration>
         </plugin>
      </plugins>
   </build>
</project>
